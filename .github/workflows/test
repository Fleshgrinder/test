#!/usr/bin/env bash
set -Eeuo pipefail

# region utils
log() { printf '::%s::%s\n' "$1" "$2"; }
log.debug() { log debug "$@"; }
log.notice() { log notice "$@"; }
log.warning() { log warning "$@"; }
log.error() { log error "$@"; }

group.start() { printf '::group::%s\n' "$1"; }
group.end() { printf '::endgroup::\n'; }
# endregion
# region list binaries
group.start 'List Runner Binaries'
log.notice 'List of all available binaries in this runner:'
ls -l /bin /usr/bin /usr/local/bin
group.end
# endregion
# region list env
group.start 'List System Environment'
log.notice 'List of all available environment variables in this run:'
env | sort
group.end
# endregion
# region list event
group.start 'List GitHub Event'
log.notice 'Lists the entire payload of the received GitHub event that triggered the run:'
cat "$GITHUB_EVENT_PATH"
group.end
# endregion
# region validate env
readonly GITHUB_EVENT_PATH=${GITHUB_EVENT_PATH:?missing required <GITHUB_EVENT_PATH> env var}
readonly GITHUB_REPOSITORY=${GITHUB_REPOSITORY?:missing required <GITHUB_REPOSITORY> env var}
readonly GITHUB_RUN_ID=${GITHUB_RUN_ID?:missing required <GITHUB_RUN_ID> env var}
# endregion
# region install gh
group.start 'Install GitHub CLI'
(
    readonly version='2.4.0'
    wget "https://github.com/cli/cli/releases/download/v${version}/gh_${version}_linux_amd64.tar.gz"
    tar -xzf "gh_${version}_linux_amd64.tar.gz"
    mv "gh_${version}_linux_amd64" '/usr/local/bin/gh'
    chmod 0755 '/usr/local/bin/gh'
    rm -f "gh_${version}_linux_amd64.tar.gz"
)
group.end
# endregion

#echo '::group::Update Check Suite'
#gh api "/repos/$GITHUB_REPOSITORY/check-runs/$GITHUB_RUN_ID"
#echo '::endgroup::'
